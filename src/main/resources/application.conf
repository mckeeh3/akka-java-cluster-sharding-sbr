akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  # stdout-loglevel = "OFF"
  stdout-loglevel = "DEBUG"
  # loglevel = "OFF"
  # loglevel = "DEBUG"
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = on
  log-dead-letters-during-shutdown = off

  actor {
    provider = "cluster"
  }

  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://sharding@127.0.0.1:2551",
      "akka.tcp://sharding@127.0.0.1:2552"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s

    # Split Brain Resolver settings

    # To enable the split brain resolver you first need to enable the provider in your application.conf:
    downing-provider-class = "com.lightbend.akka.sbr.SplitBrainResolverProvider"

    split-brain-resolver {
      # Select one of the available strategies
      # static-quorum, keep-majority, keep-oldest, keep-referee
      # if left "off" when the downing provider is enabled cluster startup will fail.

      # active-strategy = off
      # active-strategy = static-quorum
      active-strategy = keep-majority
      # active-strategy = keep-oldest
      # active-strategy = keep-referee

      # Time margin after which shards or singletons that belonged to a downed/removed
      # partition are created in surviving partition. The purpose of this margin is that
      # in case of a network partition the persistent actors in the non-surviving partitions
      # must be stopped before corresponding persistent actors are started somewhere else.
      # This is useful if you implement downing strategies that handle network partitions,
      # e.g. by keeping the larger side of the partition and shutting down the smaller side.
      # Decision is taken by the strategy when there has been no membership or
      # reachability changes for this duration, i.e. the cluster state is stable.
      stable-after = 7s
    }
  }
}

# Split Brain Resolver setting
akka.coordinated-shutdown.exit-jvm = on

# Enable metrics extension in akka-cluster-metrics.
akka.extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native

akka.cluster.jmx.multi-mbeans-in-same-jvm = on
